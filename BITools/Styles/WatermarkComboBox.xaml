<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:BITools.UIControls">
    <DataTemplate x:Key="DefaultWatermarkTemplate">
        <ContentControl Content="{Binding}"
                        Focusable="False"
                        Foreground="{StaticResource WaterMarkForeground}" />
    </DataTemplate>
    <ControlTemplate x:Key="WatermarkComboBoxTemplate" TargetType="{x:Type controls:WatermarkComboBox}">
        <Grid x:Name="templateRoot"
              Background="White"
              SnapsToDevicePixels="True">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="0" MinWidth="22" />
            </Grid.ColumnDefinitions>
            <Popup x:Name="PART_Popup"
                   Grid.ColumnSpan="2"
                   Margin="1"
                   AllowsTransparency="True"
                   IsOpen="{Binding IsDropDownOpen,
                                    Mode=TwoWay,
                                    RelativeSource={RelativeSource TemplatedParent}}"
                   Placement="Bottom"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                <Grid x:Name="DropDown"
                      MinWidth="{TemplateBinding ActualWidth}"
                      MaxHeight="{TemplateBinding MaxDropDownHeight}"
                      SnapsToDevicePixels="True">
                    <Border x:Name="DropDownBorder"
                            Margin="0,2,0,0"
                            Background="White"
                            BorderBrush="{StaticResource ComprehensiveTextBox.TextBox.DefBorder}"
                            BorderThickness="1">
                        <ScrollViewer x:Name="DropDownScrollViewer">
                            <Grid x:Name="grid">
                                <Canvas x:Name="canvas"
                                        Width="0"
                                        Height="0"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Top">
                                    <Rectangle x:Name="OpaqueRect"
                                               Width="{Binding ActualWidth,
                                                               ElementName=DropDownBorder}"
                                               Height="{Binding ActualHeight,
                                                                ElementName=DropDownBorder}"
                                               Fill="{Binding Background,
                                                              ElementName=DropDownBorder}" />
                                </Canvas>
                                <ItemsPresenter x:Name="ItemsPresenter"
                                                KeyboardNavigation.DirectionalNavigation="Contained"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Grid>
            </Popup>
            <ToggleButton x:Name="toggleButton"
                          Grid.ColumnSpan="2"
                          Background="{TemplateBinding Background}"
                          BorderBrush="{TemplateBinding BorderBrush}"
                          BorderThickness="{TemplateBinding BorderThickness}"
                          IsChecked="{Binding IsDropDownOpen,
                                              Mode=TwoWay,
                                              RelativeSource={RelativeSource TemplatedParent}}">
                <ToggleButton.Style>
                    <Style TargetType="{x:Type ToggleButton}">
                        <Setter Property="OverridesDefaultStyle" Value="True" />
                        <Setter Property="IsTabStop" Value="False" />
                        <Setter Property="Focusable" Value="False" />
                        <Setter Property="ClickMode" Value="Press" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                    <Border x:Name="templateRoot"
                                            Background="White"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            SnapsToDevicePixels="True">
                                        <Border x:Name="splitBorder"
                                                Width="22"
                                                Margin="0"
                                                HorizontalAlignment="Right"
                                                BorderBrush="Transparent"
                                                BorderThickness="1"
                                                SnapsToDevicePixels="True">
                                            <Image x:Name="Arrow"
                                                   Width="16"
                                                   Height="16"
                                                   Margin="0,0,6,0"
                                                   Source="../Images/main/arr_down.png"
                                                   UseLayoutRounding="True" />
                                        </Border>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true" />
                                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false" />
                                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false" />
                                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter TargetName="templateRoot" Property="Background" Value="White" />
                                            <Setter TargetName="splitBorder" Property="Background" Value="Transparent" />
                                            <Setter TargetName="splitBorder" Property="BorderBrush" Value="Transparent" />
                                        </MultiDataTrigger>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <!--<Setter TargetName="Arrow" Property="Fill" Value="Black" />-->
                                        </Trigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
                                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter TargetName="templateRoot" Property="Background" Value="White" />
                                            <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource TextBox.Border.MouseOver.Brush}" />
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
                                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter TargetName="templateRoot" Property="Background" Value="White" />
                                            <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource TextBox.Border.MouseOver.Brush}" />
                                            <Setter TargetName="splitBorder" Property="Background" Value="White" />
                                            <Setter TargetName="splitBorder" Property="BorderBrush" Value="{StaticResource TextBox.Border.MouseOver.Brush}" />
                                        </MultiDataTrigger>
                                        <Trigger Property="IsChecked" Value="True">
                                            <Setter TargetName="Arrow" Property="RenderTransform">
                                                <Setter.Value>
                                                    <TransformGroup>
                                                        <ScaleTransform />
                                                        <SkewTransform />
                                                        <RotateTransform Angle="180" />
                                                        <TranslateTransform />
                                                    </TransformGroup>
                                                </Setter.Value>
                                            </Setter>
                                            <Setter TargetName="Arrow" Property="RenderTransformOrigin" Value="0.5,0.5" />
                                        </Trigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true" />
                                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter TargetName="templateRoot" Property="Background" Value="White" />
                                            <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource TextBox.Border.MouseOver.Brush}" />
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true" />
                                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter TargetName="templateRoot" Property="Background" Value="White" />
                                            <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource TextBox.Border.MouseOver.Brush}" />
                                            <Setter TargetName="templateRoot" Property="Background" Value="White" />
                                            <Setter TargetName="splitBorder" Property="BorderBrush" Value="{StaticResource TextBox.Border.MouseOver.Brush}" />
                                        </MultiDataTrigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <!--<Setter TargetName="Arrow" Property="Fill" Value="#FFBFBFBF" />-->
                                        </Trigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
                                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource Button.Unable.Background}" />
                                            <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource Button.Unable.Foreground}" />
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
                                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource Button.Unable.Background}" />
                                            <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource Button.Unable.Foreground}" />
                                            <Setter TargetName="splitBorder" Property="Background" Value="Transparent" />
                                            <Setter TargetName="splitBorder" Property="BorderBrush" Value="Transparent" />
                                        </MultiDataTrigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ToggleButton.Style>
            </ToggleButton>
            <ContentPresenter x:Name="contentPresenter"
                              Margin="{TemplateBinding Padding}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="Center"
                              Content="{TemplateBinding SelectionBoxItem}"
                              ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                              IsHitTestVisible="False"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            <Border x:Name="Border"
                    Margin="{TemplateBinding BorderThickness}"
                    Background="Blue"
                    BorderBrush="Brown"
                    BorderThickness="3"
                    Visibility="Collapsed">
                <TextBox x:Name="PART_EditableTextBox"
                         Margin="{TemplateBinding Padding}"
                         HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                         VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                         IsReadOnly="{Binding IsReadOnly,
                                              RelativeSource={RelativeSource TemplatedParent}}">
                    <TextBox.Style>
                        <Style TargetType="{x:Type TextBox}">
                            <Setter Property="OverridesDefaultStyle" Value="True" />
                            <Setter Property="AllowDrop" Value="True" />
                            <Setter Property="MinWidth" Value="0" />
                            <Setter Property="MinHeight" Value="0" />
                            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type TextBox}">
                                        <ScrollViewer x:Name="PART_ContentHost"
                                                      Background="Transparent"
                                                      Focusable="False"
                                                      HorizontalScrollBarVisibility="Hidden"
                                                      VerticalScrollBarVisibility="Hidden" />
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </TextBox.Style>
                </TextBox>
            </Border>
            <ContentPresenter x:Name="PART_WatermarkHost"
                              Margin="8,0,0,0"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="Center"
                              Content="{TemplateBinding Watermark}"
                              ContentTemplate="{TemplateBinding WatermarkTemplate}"
                              IsHitTestVisible="False"
                              Visibility="Collapsed" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="HasItems" Value="False">
                <Setter TargetName="DropDownBorder" Property="Height" Value="95" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="True" />
                    <!--<Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping"
                          Value="False" />-->
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
            </MultiTrigger>
            <Trigger SourceName="DropDownScrollViewer" Property="CanContentScroll" Value="False">
                <Setter TargetName="OpaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                <Setter TargetName="OpaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
            </Trigger>
            <Trigger Property="IsEditable" Value="True">
                <Setter Property="IsTabStop" Value="False" />
                <Setter Property="Padding" Value="2" />
                <Setter TargetName="Border" Property="Visibility" Value="Visible" />
                <Setter TargetName="contentPresenter" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsKeyboardFocusWithin" Value="False" />
                    <Condition Property="Text" Value="" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter TargetName="PART_WatermarkHost" Property="Visibility" Value="Visible" />
                </MultiTrigger.Setters>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style TargetType="{x:Type controls:WatermarkComboBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background" Value="White" />
        <Setter Property="BorderBrush" Value="{StaticResource ComprehensiveTextBox.TextBox.DefBorder}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="Padding" Value="6,3,5,3" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="WatermarkTemplate" Value="{StaticResource DefaultWatermarkTemplate}" />
        <Setter Property="Template" Value="{StaticResource WatermarkComboBoxTemplate}" />
    </Style>
</ResourceDictionary>