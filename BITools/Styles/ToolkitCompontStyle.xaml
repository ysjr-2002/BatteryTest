<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Themes="clr-namespace:Xceed.Wpf.Toolkit.Themes;assembly=Xceed.Wpf.Toolkit"
                    xmlns:toolkit="http://schemas.xceed.com/wpf/xaml/toolkit">
    
    <Style x:Key="DateTimePickerStyle1" TargetType="{x:Type toolkit:DateTimePicker}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
        <Setter Property="BorderBrush" Value="{StaticResource TextBox.Border.Brush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="HorizontalContentAlignment" Value="Right" />
        <Setter Property="TextAlignment" Value="Right" />
        <Setter Property="TimeWatermarkTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl Margin="0,0,3,0"
                                    Content="{Binding}"
                                    Focusable="False"
                                    Foreground="{StaticResource DefaultForeground}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="WatermarkTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl Margin="0,0,3,0"
                                    Content="{Binding}"
                                    Focusable="False"
                                    Foreground="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="CalendarWidth" Value="178" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type toolkit:DateTimePicker}">
                    <Border>
                        <Grid>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <toolkit:ButtonSpinner x:Name="PART_Spinner"
                                                       HorizontalContentAlignment="Stretch"
                                                       VerticalContentAlignment="Stretch"
                                                       AllowSpin="{TemplateBinding AllowSpin}"
                                                       Background="{TemplateBinding Background}"
                                                       BorderBrush="{TemplateBinding BorderBrush}"
                                                       BorderThickness="{TemplateBinding BorderThickness}"
                                                       ButtonSpinnerLocation="{TemplateBinding ButtonSpinnerLocation}"
                                                       IsTabStop="False"
                                                       ShowButtonSpinner="{TemplateBinding ShowButtonSpinner}"
                                                       Style="{DynamicResource ButtonSpinnerStyle1}">
                                    <toolkit:WatermarkTextBox x:Name="PART_TextBox"
                                                              MinWidth="20"
                                                              Padding="{TemplateBinding Padding}"
                                                              HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                              VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                              AcceptsReturn="False"
                                                              Background="Transparent"
                                                              BorderThickness="0"
                                                              FontFamily="{TemplateBinding FontFamily}"
                                                              FontSize="{TemplateBinding FontSize}"
                                                              FontStretch="{TemplateBinding FontStretch}"
                                                              FontStyle="{TemplateBinding FontStyle}"
                                                              FontWeight="{TemplateBinding FontWeight}"
                                                              Foreground="{TemplateBinding Foreground}"
                                                              IsTabStop="True"
                                                              IsUndoEnabled="True"
                                                              TabIndex="{TemplateBinding TabIndex}"
                                                              Text="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}"
                                                              TextAlignment="{TemplateBinding TextAlignment}"
                                                              TextWrapping="NoWrap"
                                                              Watermark="{TemplateBinding Watermark}"
                                                              WatermarkTemplate="{TemplateBinding WatermarkTemplate}" />
                                </toolkit:ButtonSpinner>
                            </Grid>
                            <Popup x:Name="PART_Popup"
                                   IsOpen="{Binding IsChecked, ElementName=_calendarToggleButton}"
                                   StaysOpen="False"
                                   ToolTip="">
                                <Popup.Resources>
                                    <Style x:Key="{x:Type ToolTip}" TargetType="{x:Type ToolTip}">
                                        <Style.Triggers>
                                            <Trigger Property="Content" Value="">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Popup.Resources>
                                <Border Padding="3"
                                        BorderBrush="#FFABADB3"
                                        BorderThickness="1">
                                    <Border.Background>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                            <GradientStop Offset="0" Color="#FFF0F0F0" />
                                            <GradientStop Offset="1" Color="#FFE5E5E5" />
                                        </LinearGradientBrush>
                                    </Border.Background>
                                    <StackPanel>
                                        <Calendar x:Name="PART_Calendar"
                                                  BorderThickness="0"
                                                  DisplayDate="2017-08-17"
                                                  DisplayMode="{Binding CalendarDisplayMode, RelativeSource={RelativeSource TemplatedParent}}">
                                            <Calendar.Template>
                                                <ControlTemplate TargetType="{x:Type Calendar}">
                                                    <Viewbox Width="{Binding CalendarWidth, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type toolkit:DateTimePicker}}}">
                                                        <StackPanel x:Name="PART_Root" HorizontalAlignment="Center">
                                                            <CalendarItem x:Name="PART_CalendarItem"
                                                                          Background="{TemplateBinding Background}"
                                                                          BorderBrush="{TemplateBinding BorderBrush}"
                                                                          BorderThickness="{TemplateBinding BorderThickness}"
                                                                          Style="{TemplateBinding CalendarItemStyle}" />
                                                        </StackPanel>
                                                    </Viewbox>
                                                </ControlTemplate>
                                            </Calendar.Template>
                                        </Calendar>
                                        <toolkit:TimePicker x:Name="PART_TimeUpDown"
                                                            AllowSpin="{TemplateBinding TimePickerAllowSpin}"
                                                            Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
                                                            ClipValueToMinMax="{Binding ClipValueToMinMax, RelativeSource={RelativeSource TemplatedParent}}"
                                                            Foreground="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"
                                                            Format="{TemplateBinding TimeFormat}"
                                                            FormatString="{TemplateBinding TimeFormatString}"
                                                            IsUndoEnabled="{Binding IsUndoEnabled, RelativeSource={RelativeSource TemplatedParent}}"
                                                            Kind="{Binding Kind, RelativeSource={RelativeSource TemplatedParent}}"
                                                            Maximum="{Binding Maximum, RelativeSource={RelativeSource TemplatedParent}}"
                                                            Minimum="{Binding Minimum, RelativeSource={RelativeSource TemplatedParent}}"
                                                            ShowButtonSpinner="{TemplateBinding TimePickerShowButtonSpinner}"
                                                            Step="{TemplateBinding Step}"
                                                            Text=""
                                                            Visibility="{TemplateBinding TimePickerVisibility}"
                                                            Watermark="{TemplateBinding TimeWatermark}"
                                                            WatermarkTemplate="{TemplateBinding TimeWatermarkTemplate}"
                                                            Value="{Binding Value, RelativeSource={RelativeSource TemplatedParent}}" />
                                    </StackPanel>
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource TextBox.Border.MouseOver.Brush}" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsReadOnly, RelativeSource={RelativeSource Self}}" Value="False" />
                                <Condition Binding="{Binding AllowTextInput, RelativeSource={RelativeSource Self}}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_TextBox" Property="IsReadOnly" Value="True" />
                        </MultiDataTrigger>
                        <DataTrigger Binding="{Binding IsReadOnly, RelativeSource={RelativeSource Self}}" Value="True">
                            <Setter TargetName="PART_TextBox" Property="IsReadOnly" Value="True" />
                        </DataTrigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource TextBox.Border.MouseOver.Brush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="PART_TextBox" Property="FocusManager.FocusedElement" Value="{Binding ElementName=PART_TextBox}" />
                        </Trigger>
                        <Trigger Property="UpdateValueOnEnterKey" Value="True">
                            <Setter TargetName="PART_TimeUpDown" Property="Value" Value="{Binding Value, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonSpinnerStyle1" TargetType="{x:Type toolkit:ButtonSpinner}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {ComponentResourceKey ResourceId=ControlNormalBorderKey,                      TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="IsTabStop" Value="True" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type toolkit:ButtonSpinner}">
                    <Border x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="firstContentColumn" Width="*" />
                                <ColumnDefinition x:Name="secondContentColumn" Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <ContentPresenter x:Name="contentPresenter"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Content="{TemplateBinding Content}"
                                              Focusable="False"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            <Grid x:Name="gridContent"
                                  Grid.Column="1"
                                  Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Grid.Visibility>
                                    <TemplateBinding Property="ShowButtonSpinner">
                                        <TemplateBinding.Converter>
                                            <BooleanToVisibilityConverter />
                                        </TemplateBinding.Converter>
                                    </TemplateBinding>
                                </Grid.Visibility>
                                <RepeatButton x:Name="PART_IncreaseButton"
                                              IsTabStop="{TemplateBinding IsTabStop}"
                                              Style="{StaticResource RepeatButton.UP.Style}">
                                    <RepeatButton.ContentTemplate>
                                        <DataTemplate>
                                            <Path Width="9"
                                                  Height="5"
                                                  HorizontalAlignment="Center"
                                                  VerticalAlignment="Center"
                                                  Data="M0,5L4.5,0.5 9,5 6,5 4.5,3.5 3,5z"
                                                  Fill="{DynamicResource {ComponentResourceKey ResourceId=GlyphNormalForegroundKey,
                                                                                               TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}"
                                                  Focusable="False"
                                                  SnapsToDevicePixels="True" />
                                        </DataTemplate>
                                    </RepeatButton.ContentTemplate>
                                </RepeatButton>
                                <RepeatButton x:Name="PART_DecreaseButton"
                                              Grid.Row="1"
                                              IsTabStop="{TemplateBinding IsTabStop}"
                                              Style="{StaticResource RepeatButton.Down.Style}">
                                    <RepeatButton.ContentTemplate>
                                        <DataTemplate>
                                            <Path Width="9"
                                                  Height="5"
                                                  HorizontalAlignment="Center"
                                                  VerticalAlignment="Center"
                                                  Data="M0,0L3,0 4.5,1.5 6,0 9,0 4.5,4.5z"
                                                  Fill="{DynamicResource {ComponentResourceKey ResourceId=GlyphNormalForegroundKey,
                                                                                               TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}"
                                                  Focusable="False"
                                                  SnapsToDevicePixels="True" />
                                        </DataTemplate>
                                    </RepeatButton.ContentTemplate>
                                </RepeatButton>
                            </Grid>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource {ComponentResourceKey ResourceId=ControlMouseOverBorderKey,                      TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource {ComponentResourceKey ResourceId=ControlSelectedBorderKey,                      TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{DynamicResource {ComponentResourceKey ResourceId=ControlDisabledBackgroundKey,                      TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}" />
                        </Trigger>
                        <Trigger SourceName="PART_IncreaseButton" Property="IsEnabled" Value="False">
                            <Setter TargetName="PART_IncreaseButton" Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <Path Width="9"
                                              Height="5"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              Data="M0,5L4.5,0.5 9,5 6,5 4.5,3.5 3,5z"
                                              Fill="{DynamicResource {ComponentResourceKey ResourceId=GlyphDisabledForegroundKey,
                                                                                           TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}"
                                              Focusable="False"
                                              SnapsToDevicePixels="True" />
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger SourceName="PART_DecreaseButton" Property="IsEnabled" Value="False">
                            <Setter TargetName="PART_DecreaseButton" Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <Path Width="9"
                                              Height="5"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              Data="M0,0L3,0 4.5,1.5 6,0 9,0 4.5,4.5z"
                                              Fill="{DynamicResource {ComponentResourceKey ResourceId=GlyphDisabledForegroundKey,
                                                                                           TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}"
                                              Focusable="False"
                                              SnapsToDevicePixels="True" />
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="ButtonSpinnerLocation" Value="Left">
                            <Setter TargetName="firstContentColumn" Property="Width" Value="Auto" />
                            <Setter TargetName="secondContentColumn" Property="Width" Value="*" />
                            <Setter TargetName="contentPresenter" Property="Grid.Column" Value="1" />
                            <Setter TargetName="gridContent" Property="Grid.Column" Value="0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>